{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"","../external \"require('upath')\"",".././src/lib/icon-path-builder.ts","../external \"fs\"","../external \"url\"","../external \"require('glob')\"","../external \"crypto\"","../external \"path\"",".././src/types/index.ts",".././src/lib/jest.ts",".././src/treeviews/test-tree-item.ts",".././src/lib/test-utils.ts",".././src/documents/document.ts",".././src/decorators/decorator.ts",".././src/hovers/hover-message.ts",".././src/hovers/hover-provider.ts",".././src/terminals/terminal-provider.ts",".././src/treeviews/tests-tree-data-provider.ts",".././src/quickpicks/config-quickpick.ts",".././src/commands/command.ts",".././src/commands/run-command.ts",".././src/commands/debug-command.ts",".././src/commands/open-command.ts",".././src/commands/config-command.ts",".././src/extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","upath","IconPathBuilder","icon","join","__filename","TestType","Commands","ContextCommands","workspaceFolder","workspaceFolders","uri","fsPath","CONFIG_REGEX","packageJSON","getWorkspaceFolderPath","configs","split","reduce","textLine","matches","exec","push","Set","forceReconfigure","jestConfig","getConfiguration","pattern","filter","Boolean","map","trim","options","matchBase","nodir","ignore","cwd","length","jestPath","process","platform","includes","WIN_PATH","UNIX_PATH","getExecutable","test","super","None","this","item","command","OPEN_TEST","title","arguments","context","String","id","isTest","dark","build","light","type","TEST","parent","items","collapsibleState","Expanded","setHierarchy","tests","previous","parents","orderedTests","forEach","current","range","start","character","Number","values","slice","last","defaultTreeItem","undefined","DESCRIBE","asTree","tree","children","child","parentID","document","lines","lineCount","lineAt","TEST_REGEX","getLines","firstNonWhitespaceCharacterIndex","text","line","end","findTestOnLine","getTests","pop","Decorator","extension","editor","setDecorations","decorationType","getDecorations","timeout","clearTimeout","setTimeout","createTextEditorDecorationType","after","margin","contentText","color","commandMarkdown","args","markdown","commands","getMarkdown","isTrusted","getCommandMarkdown","RUN_TEST","description","DEBUG_FILE","CONFIG_FILE","runTestCommandMarkdown","getRunTestMarkdown","runFileCommandMarkdown","getRunFileMarkdown","debugTestCommandMarkdown","getDebugTestMarkdown","configTestCommandMarkdown","getConfigTestMarkdown","message","hoverMessage","unregister","position","token","getTestOnLine","validateRange","MAX_SAFE_INTEGER","getMessage","file","fileName","subscriptions","registerHoverProvider","provideHover","hoverDisposable","from","dispose","TERMINAL_NAME","onDidCloseTerminal","terminal","clear","createTerminal","show","executeCommand","onDidChangeTreeDataEventEmitter","onDidChangeTreeData","event","refresh","subscribe","fire","element","view","createTreeView","treeDataProvider","showCollapseAll","unsubscribe","subscribeOne","RUN_FILE","contextCommand","params","ecommands","disposable","registerCommand","execute","subscription","getConfigs","showQuickPick","update","digest","delete","generateHash","hash","has","set","encodeURIComponent","JSON","stringify","getMarkdownArgs","Map","config","getConfig","getCommand","normalize","sendText","debugConfiguration","request","program","console","internalConsoleOptions","disableOptimisticBPs","startDebugging","preserveFocus","selection","showTextDocument","removeConfig","showInformationMessage","activate","activeTextEditor","decorator","hoverProvider","treeViewProvider","register","onDidChangeActiveTextEditor","onDidChangeTextDocument","onDidChangeConfiguration","affectsConfiguration","deactivate"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"vscode\");","module.exports = require(\"require('upath')\");","//import * as upath from 'upath';\n\nconst upath = require('upath');\n\nexport default class IconPathBuilder {\n\tstatic build(icon: string): string {\n\t\treturn upath.join(__filename, '..', '..', '..', 'media', icon);\n\t}\n}\n","module.exports = require(\"fs\");","module.exports = require(\"url\");","module.exports = require(\"require('glob')\");","module.exports = require(\"crypto\");","module.exports = require(\"path\");","import { Range, ExtensionContext, TextEditor } from 'vscode';\nimport Document from '../documents/document';\nimport TerminalProvider from '../terminals/terminal-provider';\nimport Command from '../commands/command';\nimport TestTreeItem from '../treeviews/test-tree-item';\n\nexport enum TestType {\n\tTEST = 'test',\n\tDESCRIBE = 'describe'\n}\nexport interface Test {\n\tid: number | undefined;\n\tname: string;\n\trange: Range;\n\ttype: TestType;\n\tparent?: number;\n}\n\nexport interface TestParent {\n\t[name: string]: number;\n}\n\nexport interface Extension {\n\tcommands: ExtensionCommands;\n\tcontext: ExtensionContext;\n\tdocument: Document;\n\teditor: TextEditor;\n\tterminal: TerminalProvider;\n}\n\nexport interface ExtensionCommands {\n\t[key: string]: Command;\n}\n\nexport interface CommandArgs {\n\tfile: string;\n\ttest?: string;\n\tcontext?: TestTreeItem;\n}\n\nexport interface CommandMarkdown {\n\ttitle: string;\n\tdescription?: string;\n}\n\nexport enum Commands {\n\tRUN_TEST = 'yajer.run.test',\n\tOPEN_TEST = 'yajer.open.test',\n\tDEBUG_FILE = 'yajer.debug.file',\n\tCONFIG_FILE = 'yajer.config.file'\n}\n\nexport enum ContextCommands {\n\tRUN_TEST = 'yajer.run.test.context',\n\tRUN_FILE = 'yajer.run.file.context',\n\tOPEN_TEST = 'yajer.open.test.context',\n\tDEBUG_FILE = 'yajer.debug.file.context',\n\tCONFIG_FILE = 'yajer.config.reset.context'\n}\n\nexport interface IconPath {\n\tdark: string;\n\tlight: string;\n}\n","import { readFileSync } from 'fs';\nimport { workspace } from 'vscode';\nimport { URL } from 'url';\n\nimport * as glob from 'glob';\n//import * as upath from 'upath';\n\nconst upath = require('upath');\n\nexport default class Jest {\n\tprivate static configs: string[] = [];\n\tprivate static WIN_PATH = './node_modules/jest/bin/jest.js';\n\tprivate static UNIX_PATH = './node_modules/.bin/jest';\n\n\tprivate static getWorkspaceFolderPath(): string {\n\t\tconst [workspaceFolder] = workspace.workspaceFolders;\n\t\treturn workspaceFolder ? workspaceFolder.uri.fsPath : './';\n\t}\n\n\tstatic getConfigsPackageJSON(): string[] {\n\t\tconst CONFIG_REGEX = /jest.+--config=([a-z0-9\\/.]+)/i;\n\n\t\tconst packageJSON = upath.join(Jest.getWorkspaceFolderPath(), 'package.json');\n\t\tconst contents = readFileSync(new URL(`file://${packageJSON}`), 'utf8');\n\n\t\tconst configs = contents.split('\\n').reduce((configs, textLine) => {\n\t\t\tconst matches = CONFIG_REGEX.exec(textLine);\n\t\t\tmatches && configs.push(matches[1]);\n\t\t\treturn configs;\n\t\t}, []);\n\n\t\treturn [...new Set(configs)];\n\t}\n\n\tstatic getConfigs(forceReconfigure: boolean = false): string[] {\n\t\tconst jestConfig: string = workspace.getConfiguration().get('yajer.jestConfig');\n\t\tif (jestConfig) {\n\t\t\treturn [jestConfig];\n\t\t}\n\n\t\tconst defaultPatterns = ['jest.config.js', 'jest.config.json'];\n\t\tconst configPatterns: string = workspace.getConfiguration().get('yajer.jestConfigPatterns');\n\t\tconst patterns = [...defaultPatterns, ...configPatterns.split(',')].filter(Boolean).map(p => `*${p.trim()}`);\n\n\t\tconst pattern = `+(${patterns.join('|')})`;\n\t\tconst options = { matchBase: true, nodir: true, ignore: 'node_modules/**', cwd: Jest.getWorkspaceFolderPath() };\n\n\t\tif (Jest.configs.length === 0 || forceReconfigure) {\n\t\t\tJest.configs = glob.sync(pattern, options);\n\t\t}\n\t\treturn Jest.configs;\n\t}\n\n\tstatic getExecutable(): string {\n\t\tconst jestPath = process.platform.includes('win32') ? Jest.WIN_PATH : Jest.UNIX_PATH;\n\t\treturn upath.join(Jest.getWorkspaceFolderPath(), jestPath);\n\t}\n\n\tstatic getCommand(): string {\n\t\treturn workspace.getConfiguration().get('yajer.jestCommand') || `node ${Jest.getExecutable()}`;\n\t}\n}\n","import { TreeItem, TreeItemCollapsibleState, ThemeIcon } from 'vscode';\nimport { Test, TestType, Commands } from '../types';\nimport IconPathBuilder from '../lib/icon-path-builder';\n\nexport default class TestTreeItem extends TreeItem {\n\treadonly item: Test;\n\tprivate items: TestTreeItem[] | undefined;\n\n\tconstructor(test: Test) {\n\t\tsuper(test.name, TreeItemCollapsibleState.None);\n\t\tthis.item = test;\n\n\t\tthis.command = {\n\t\t\tcommand: Commands.OPEN_TEST,\n\t\t\ttitle: '',\n\t\t\targuments: [{ context: this }]\n\t\t};\n\t}\n\n\tget id(): string {\n\t\treturn String(this.item.id);\n\t}\n\n\tget tooltip(): string {\n\t\treturn `${this.isTest ? 'test' : 'describe'}('${this.item.name}')`;\n\t}\n\n\tget contextValue(): string {\n\t\treturn 'test';\n\t}\n\n\tget iconPath(): ThemeIcon {\n\t\tconst icon = this.isTest ? 'test.svg' : 'describe.svg';\n\t\treturn {\n\t\t\tdark: IconPathBuilder.build(icon),\n\t\t\tlight: IconPathBuilder.build(icon)\n\t\t};\n\t}\n\n\tget isTest(): boolean {\n\t\treturn this.item.type === TestType.TEST;\n\t}\n\n\tget parentID(): string {\n\t\treturn String(this.item.parent);\n\t}\n\n\tset children(items: TestTreeItem[]) {\n\t\tthis.items = items;\n\t\t!!this.items.length && (this.collapsibleState = TreeItemCollapsibleState.Expanded);\n\t}\n\n\tget children(): TestTreeItem[] | undefined {\n\t\treturn this.items;\n\t}\n}\n","import { Test, TestParent, TestType } from '../types';\nimport TestTreeItem from '../treeviews/test-tree-item';\n\nexport const last = (items: TestParent) => Object.values(items).slice(-1)[0];\n\nexport const reset = (items: TestParent, value: number) => {\n\tfor (let i in items) {\n\t\tNumber(i) > value && delete items[i];\n\t}\n};\n\nexport const setHierarchy = (tests: Test[]): Test[] => {\n\tlet previous = -1;\n\tconst parents: TestParent = {};\n\tconst orderedTests = [...tests];\n\n\torderedTests.forEach((test: Test) => {\n\t\tconst current = test.range.start.character;\n\t\tconst parent = parents[current];\n\n\t\tcurrent < previous && reset(parents, current);\n\n\t\ttest.parent = parent ? tests[parent].parent : last(parents);\n\n\t\tparents[current] = test.id;\n\t\tprevious = current;\n\t});\n\n\treturn orderedTests;\n};\n\nconst defaultTreeItem: TestTreeItem = new TestTreeItem({ id: undefined, name: '', range: null, type: TestType.DESCRIBE });\n\nexport const asTree = (items: TestTreeItem[], parent: TestTreeItem = defaultTreeItem, tree: TestTreeItem[] = []) => {\n\tconst children = items.filter(child => child.parentID === parent.id);\n\n\tif (children.length > 0) {\n\t\tparent.id === 'undefined' ? (tree = children) : (parent.children = children);\n\t\tchildren.forEach(child => asTree(items, child, tree));\n\t}\n\n\treturn tree;\n};\n","import { Position, Range, TextLine, TextDocument } from 'vscode';\nimport { Test, TestType } from '../types';\nimport { setHierarchy } from '../lib/test-utils';\n\nexport default class Document {\n\tconstructor(private readonly document: TextDocument) {}\n\n\tpublic getLines(): TextLine[] {\n\t\tconst lines = [];\n\t\tif (this.document) {\n\t\t\tfor (let i = 0; i < this.document.lineCount; i++) {\n\t\t\t\tlines.push(this.document.lineAt(i));\n\t\t\t}\n\t\t}\n\t\treturn lines;\n\t}\n\n\tpublic getTests(): Test[] {\n\t\tconst TEST_REGEX = /(it|test|describe)(\\.(skip|only))?\\(['\"]([^'\"]+)['\"],/i;\n\n\t\tconst tests = this.getLines().reduce((tests, textLine) => {\n\t\t\tconst { firstNonWhitespaceCharacterIndex, range, text } = textLine;\n\t\t\tconst matches = TEST_REGEX.exec(text);\n\n\t\t\tmatches &&\n\t\t\t\ttests.push({\n\t\t\t\t\tid: tests.length,\n\t\t\t\t\tname: matches[4],\n\t\t\t\t\trange: new Range(new Position(range.start.line, firstNonWhitespaceCharacterIndex), range.end),\n\t\t\t\t\ttype: matches[1] === TestType.DESCRIBE ? TestType.DESCRIBE : TestType.TEST\n\t\t\t\t} as Test);\n\t\t\treturn tests;\n\t\t}, []);\n\n\t\treturn setHierarchy(tests);\n\t}\n\n\tpublic getTestOnLine(line: number): Test {\n\t\treturn this.findTestOnLine(this.getTests(), line);\n\t}\n\n\tpublic findTestOnLine(tests: Test[], line: number): Test {\n\t\treturn tests.filter(({ range: { start } }) => start.line === line).pop();\n\t}\n}\n","import { DecorationOptions, TextEditorDecorationType, window } from 'vscode';\nimport { Extension } from '../types';\n\nexport default class Decorator {\n\tprivate timeout: NodeJS.Timer;\n\tpublic static decorationType: TextEditorDecorationType = window.createTextEditorDecorationType({\n\t\tafter: { margin: '0 0 0 .5rem', contentText: '▶', color: '#c5c5c5' }\n\t});\n\n\tconstructor(private readonly extension: Extension) {}\n\n\tprivate getDecorations(): DecorationOptions[] {\n\t\treturn this.extension.document.getTests().map(({ range }) => ({ range }));\n\t}\n\n\tprivate setDecorations() {\n\t\tthis.extension.editor && this.extension.editor.setDecorations(Decorator.decorationType, this.getDecorations());\n\t}\n\n\tpublic update() {\n\t\tthis.timeout && clearTimeout(this.timeout);\n\t\tthis.timeout = setTimeout(this.setDecorations.bind(this), 500);\n\t}\n}\n","import { MarkdownString } from 'vscode';\r\nimport { Extension, CommandArgs, Commands, CommandMarkdown } from '../types';\r\n\r\nexport default class HoverMessage {\r\n\tconstructor(private readonly extension: Extension) {}\r\n\r\n\tprivate getCommandMarkdown(command: Commands, commandMarkdown: CommandMarkdown, args: CommandArgs): MarkdownString {\r\n\t\tconst markdown = new MarkdownString(this.extension.commands[command].getMarkdown(commandMarkdown, args));\r\n\t\tmarkdown.isTrusted = true;\r\n\t\treturn markdown;\r\n\t}\r\n\r\n\tprivate getRunTestMarkdown(args: CommandArgs): MarkdownString {\r\n\t\treturn this.getCommandMarkdown(\r\n\t\t\tCommands.RUN_TEST,\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Run Test',\r\n\t\t\t\tdescription: 'Run current test with last known config'\r\n\t\t\t},\r\n\t\t\targs\r\n\t\t);\r\n\t}\r\n\r\n\tprivate getRunFileMarkdown(args: CommandArgs): MarkdownString {\r\n\t\treturn this.getCommandMarkdown(\r\n\t\t\tCommands.RUN_TEST,\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Run File',\r\n\t\t\t\tdescription: 'Run current file with last known config'\r\n\t\t\t},\r\n\t\t\t{ ...args, test: undefined }\r\n\t\t);\r\n\t}\r\n\r\n\tprivate getDebugTestMarkdown(args: CommandArgs): MarkdownString {\r\n\t\treturn this.getCommandMarkdown(\r\n\t\t\tCommands.DEBUG_FILE,\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Debug FIle',\r\n\t\t\t\tdescription: 'Debug current file with last known config'\r\n\t\t\t},\r\n\t\t\t{ ...args }\r\n\t\t);\r\n\t}\r\n\r\n\tprivate getConfigTestMarkdown(args: CommandArgs): MarkdownString {\r\n\t\treturn this.getCommandMarkdown(\r\n\t\t\tCommands.CONFIG_FILE,\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Reset Config',\r\n\t\t\t\tdescription: 'Reset configuration for current file'\r\n\t\t\t},\r\n\t\t\targs\r\n\t\t);\r\n\t}\r\n\r\n\tpublic getMessage(args: CommandArgs): MarkdownString {\r\n\t\tconst runTestCommandMarkdown = this.getRunTestMarkdown(args);\r\n\t\tconst runFileCommandMarkdown = this.getRunFileMarkdown(args);\r\n\t\tconst debugTestCommandMarkdown = this.getDebugTestMarkdown(args);\r\n\t\tconst configTestCommandMarkdown = this.getConfigTestMarkdown(args);\r\n\r\n\t\tconst message = [\r\n\t\t\trunTestCommandMarkdown.value,\r\n\t\t\trunFileCommandMarkdown.value,\r\n\t\t\tdebugTestCommandMarkdown.value,\r\n\t\t\t'***',\r\n\t\t\tconfigTestCommandMarkdown.value\r\n\t\t].join('  \\n');\r\n\r\n\t\tconst markdown = new MarkdownString(message);\r\n\t\tmarkdown.isTrusted = true;\r\n\t\treturn markdown;\r\n\t}\r\n}\r\n","import { TextDocument, Position, CancellationToken, Hover, Range, languages, Disposable, MarkdownString } from 'vscode';\r\nimport { Extension, Test } from '../types';\r\nimport HoverMessage from './hover-message';\r\n\r\nexport default class HoverProvider implements Disposable {\r\n\tprivate hoverDisposable: Disposable;\r\n\tprivate hoverMessage: HoverMessage;\r\n\r\n\tconstructor(private readonly extension: Extension) {\r\n\t\tthis.hoverMessage = new HoverMessage(extension);\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\t\tthis.unregister();\r\n\t}\r\n\r\n\tprivate provideHover(document: TextDocument, position: Position, token: CancellationToken): Hover {\r\n\t\tconst test: Test = this.extension.document.getTestOnLine(position.line);\r\n\t\tconst range = document.validateRange(new Range(position.line, Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER));\r\n\r\n\t\tconst message: MarkdownString = this.hoverMessage.getMessage({ file: this.extension.editor.document.fileName, test: test.name });\r\n\t\treturn new Hover(message, range);\r\n\t}\r\n\r\n\tpublic register() {\r\n\t\tthis.unregister();\r\n\r\n\t\tif (this.extension.editor === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst subscriptions = [\r\n\t\t\tlanguages.registerHoverProvider(\r\n\t\t\t\t{ pattern: this.extension.editor.document.uri.fsPath },\r\n\t\t\t\t{\r\n\t\t\t\t\tprovideHover: this.provideHover.bind(this)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t];\r\n\t\tthis.hoverDisposable = Disposable.from(...subscriptions);\r\n\t}\r\n\r\n\tunregister() {\r\n\t\tthis.hoverDisposable && this.hoverDisposable.dispose();\r\n\t}\r\n}\r\n","import { Terminal, window, commands } from 'vscode';\r\n\r\nexport default class TerminalProvider {\r\n\tprivate terminal: Terminal;\r\n\tprivate readonly TERMINAL_NAME = 'Yet Another Jest Runner';\r\n\r\n\tconstructor() {\r\n\t\twindow.onDidCloseTerminal(() => {\r\n\t\t\tthis.terminal = null;\r\n\t\t});\r\n\t}\r\n\r\n\tasync get(clear: Boolean): Promise<Terminal> {\r\n\t\t!this.terminal && (this.terminal = window.createTerminal(this.TERMINAL_NAME));\r\n\t\tthis.terminal.show();\r\n\t\tclear && (await this.clear());\r\n\t\treturn this.terminal;\r\n\t}\r\n\r\n\tasync clear() {\r\n\t\tawait commands.executeCommand('workbench.action.terminal.clear');\r\n\t}\r\n}\r\n","import { Event, EventEmitter, TreeDataProvider, commands, window } from 'vscode';\nimport { Extension, ContextCommands, Commands, CommandArgs } from '../types';\nimport TestTreeItem from './test-tree-item';\nimport { asTree } from '../lib/test-utils';\n\nexport default class TestsTreeDataProvider implements TreeDataProvider<TestTreeItem> {\n\tprivate items: TestTreeItem[] = [];\n\tprivate subscriptions: { dispose: Function }[] = [];\n\n\tprivate onDidChangeTreeDataEventEmitter: EventEmitter<TestTreeItem | undefined> = new EventEmitter<TestTreeItem | undefined>();\n\treadonly onDidChangeTreeData: Event<TestTreeItem | undefined> = this.onDidChangeTreeDataEventEmitter.event;\n\n\tconstructor(private readonly extension: Extension) {\n\t\tthis.refresh();\n\t\tthis.subscribe();\n\t}\n\n\trefresh(): void {\n\t\tthis.onDidChangeTreeDataEventEmitter.fire();\n\t\tthis.items = asTree(this.extension.document.getTests().map(test => new TestTreeItem(test)));\n\t\tcommands.executeCommand('setContext', 'hasTestsInView', !!this.items.length);\n\t\tthis.subscribe();\n\t}\n\n\tgetTreeItem(element: TestTreeItem): TestTreeItem {\n\t\treturn element;\n\t}\n\n\tgetChildren(element?: TestTreeItem): TestTreeItem[] {\n\t\treturn element ? element.children : this.items;\n\t}\n\n\tregister() {\n\t\tconst view = window.createTreeView('yajer', { treeDataProvider: this, showCollapseAll: true });\n\t\tthis.extension.context.subscriptions.push(view);\n\t}\n\n\tsubscribe() {\n\t\tthis.unsubscribe();\n\t\tthis.subscribeOne(ContextCommands.CONFIG_FILE, Commands.CONFIG_FILE, {});\n\t\tthis.subscribeOne(ContextCommands.RUN_TEST, Commands.RUN_TEST, {});\n\t\tthis.subscribeOne(ContextCommands.RUN_FILE, Commands.RUN_TEST, { context: null });\n\t\tthis.subscribeOne(ContextCommands.OPEN_TEST, Commands.OPEN_TEST, {});\n\t\tthis.subscribeOne(ContextCommands.DEBUG_FILE, Commands.DEBUG_FILE, {});\n\t}\n\n\tprivate subscribeOne(contextCommand: ContextCommands, command: Commands, params: Object) {\n\t\tconst editor = this.extension.editor;\n\t\tconst ecommands = this.extension.commands;\n\t\tconst subscriptions = this.extension.context.subscriptions;\n\n\t\tconst args = { file: editor && editor.document.fileName, ...params };\n\t\tconst disposable = commands.registerCommand(contextCommand, (context = this) => ecommands[command].execute({ ...args, context }));\n\n\t\tsubscriptions.push(disposable);\n\t\tthis.subscriptions.push(disposable);\n\t}\n\n\tprivate unsubscribe() {\n\t\tthis.subscriptions.forEach(subscription => subscription.dispose());\n\t}\n}\n","import { window } from 'vscode';\r\nimport Jest from '../lib/jest';\r\n\r\nexport default class ConfigQuickPick {\r\n\tstatic show() {\r\n\t\tconst configs: string[] = Jest.getConfigs() || [];\r\n\t\treturn configs.length <= 1 ? configs.pop() : window.showQuickPick(Jest.getConfigs());\r\n\t}\r\n}\r\n","import * as crypto from 'crypto';\r\nimport { Disposable, commands } from 'vscode';\r\nimport { Commands, CommandMarkdown, CommandArgs } from '../types';\r\nimport ConfigQuickPick from '../quickpicks/config-quickpick';\r\n\r\nexport default abstract class Command implements Disposable {\r\n\tstatic configs: Map<string, string> = new Map();\r\n\tprivate disposable: Disposable;\r\n\r\n\tconstructor(protected readonly command: Commands) {\r\n\t\tthis.disposable = commands.registerCommand(command, (args: unknown) => this.execute(args), this);\r\n\t}\r\n\r\n\tprivate generateHash(message: string): string {\r\n\t\treturn crypto\r\n\t\t\t.createHash('md5')\r\n\t\t\t.update(message)\r\n\t\t\t.digest('hex');\r\n\t}\r\n\r\n\tprotected removeConfig(file: string) {\r\n\t\tCommand.configs.delete(this.generateHash(file));\r\n\t}\r\n\r\n\tprotected async getConfig(file: string): Promise<string> {\r\n\t\tconst hash = this.generateHash(file);\r\n\t\t!Command.configs.has(hash) && Command.configs.set(hash, await ConfigQuickPick.show());\r\n\t\treturn Command.configs.get(hash);\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tthis.disposable && this.disposable.dispose();\r\n\t}\r\n\r\n\tgetMarkdownArgs(args: CommandArgs): string {\r\n\t\treturn `command:${this.command}?${encodeURIComponent(JSON.stringify(args))}`;\r\n\t}\r\n\r\n\tgetMarkdown(command: CommandMarkdown, args: CommandArgs): string {\r\n\t\treturn `[${command.title}](${this.getMarkdownArgs(args)} \"${command.description}\")`;\r\n\t}\r\n\r\n\tabstract execute(args: unknown): unknown;\r\n}\r\n","//import * as upath from 'upath';\r\nimport { Commands, Extension, CommandArgs } from '../types';\r\nimport Jest from '../lib/jest';\r\nimport Command from './command';\r\n\r\nconst upath = require('upath');\r\n\r\nexport default class RunCommand extends Command {\r\n\tconstructor(protected readonly extension: Extension) {\r\n\t\tsuper(Commands.RUN_TEST);\r\n\t}\r\n\r\n\tasync execute(args: CommandArgs) {\r\n\t\tconst { file, context } = args;\r\n\t\tconst config = await this.getConfig(file);\r\n\r\n\t\tconst test = context ? context.item.name : args.test;\r\n\r\n\t\tlet command = `${Jest.getCommand()} ${upath.normalize(file)}`;\r\n\t\ttest && (command = `${command} -t \"${test}\"`);\r\n\t\tconfig && (command = `${command} -c \"${config}\"`);\r\n\r\n\t\tconst terminal = await this.extension.terminal.get(true);\r\n\t\tterminal.sendText(command);\r\n\t}\r\n}\r\n","//import * as upath from 'upath';\r\nimport { DebugConfiguration, debug } from 'vscode';\r\nimport { Commands, Extension, CommandArgs } from '../types';\r\nimport Jest from '../lib/jest';\r\nimport Command from './command';\r\n\r\nconst upath = require('upath');\r\n\r\nexport default class DebugCommand extends Command {\r\n\tconstructor(protected readonly extension: Extension) {\r\n\t\tsuper(Commands.DEBUG_FILE);\r\n\t}\r\n\r\n\tasync execute(args: CommandArgs) {\r\n\t\tconst { file, test } = args;\r\n\t\tconst config = await this.getConfig(file);\r\n\r\n\t\tconst debugConfiguration: DebugConfiguration = {\r\n\t\t\ttype: 'node',\r\n\t\t\trequest: 'launch',\r\n\t\t\tname: 'Debug Jest Tests',\r\n\t\t\tprogram: Jest.getExecutable(),\r\n\t\t\targs: [upath.normalize(file), '--config', config],\r\n\t\t\tconsole: 'integratedTerminal',\r\n\t\t\tinternalConsoleOptions: 'neverOpen',\r\n\t\t\tdisableOptimisticBPs: true\r\n\t\t};\r\n\r\n\t\tdebug.startDebugging(undefined, debugConfiguration);\r\n\t}\r\n}\r\n","import { Commands, Extension, CommandArgs } from '../types';\r\nimport Command from './command';\r\nimport { TextDocumentShowOptions, window } from 'vscode';\r\n\r\nexport default class OpenCommand extends Command {\r\n\tconstructor(protected readonly extension: Extension) {\r\n\t\tsuper(Commands.OPEN_TEST);\r\n\t}\r\n\r\n\tasync execute(args: CommandArgs) {\r\n\t\tconst { context } = args;\r\n\t\tconst { document } = this.extension.editor;\r\n\t\tconst options: TextDocumentShowOptions = { preserveFocus: true, selection: context.item.range };\r\n\r\n\t\tawait window.showTextDocument(document, options);\r\n\t}\r\n}\r\n","import * as path from 'path';\r\nimport { Commands, Extension, CommandArgs } from '../types';\r\nimport Command from './command';\r\nimport { window } from 'vscode';\r\n\r\nexport default class ConfigCommand extends Command {\r\n\tconstructor(protected readonly extension: Extension) {\r\n\t\tsuper(Commands.CONFIG_FILE);\r\n\t}\r\n\r\n\texecute(args: CommandArgs) {\r\n\t\tconst { file } = args;\r\n\t\tthis.removeConfig(file);\r\n\t\twindow.showInformationMessage(`Configuration reset for ${path.basename(file)}`);\r\n\t}\r\n}\r\n","import { ExtensionContext, window, workspace } from 'vscode';\nimport { Extension, Commands } from './types';\nimport Jest from './lib/jest';\nimport Document from './documents/document';\nimport Decorator from './decorators/decorator';\nimport HoverProvider from './hovers/hover-provider';\nimport TerminalProvider from './terminals/terminal-provider';\nimport TestsTreeDataProvider from './treeviews/tests-tree-data-provider';\nimport { RunCommand, DebugCommand, OpenCommand, ConfigCommand } from './commands';\n\nexport function activate(context: ExtensionContext) {\n\tconst editor = window.activeTextEditor;\n\tconst document = new Document(editor && editor.document);\n\tconst terminal = new TerminalProvider();\n\n\tconst extension: Extension = { context, document, editor, terminal, commands: {} };\n\n\textension.commands[Commands.RUN_TEST] = new RunCommand(extension);\n\textension.commands[Commands.OPEN_TEST] = new OpenCommand(extension);\n\textension.commands[Commands.DEBUG_FILE] = new DebugCommand(extension);\n\textension.commands[Commands.CONFIG_FILE] = new ConfigCommand(extension);\n\n\tconst decorator = new Decorator(extension);\n\tconst hoverProvider = new HoverProvider(extension);\n\tconst treeViewProvider = new TestsTreeDataProvider(extension);\n\n\tdecorator.update();\n\thoverProvider.register();\n\ttreeViewProvider.register();\n\n\tJest.getConfigs();\n\n\twindow.onDidChangeActiveTextEditor(\n\t\teditor => {\n\t\t\textension.editor = editor;\n\t\t\textension.document = new Document(editor.document);\n\t\t\tdecorator.update();\n\t\t\thoverProvider.register();\n\t\t\ttreeViewProvider.refresh();\n\t\t},\n\t\tnull,\n\t\tcontext.subscriptions\n\t);\n\n\tworkspace.onDidChangeTextDocument(\n\t\tevent => {\n\t\t\tif (extension.editor && event.document === extension.editor.document) {\n\t\t\t\tdecorator.update();\n\t\t\t\ttreeViewProvider.refresh();\n\t\t\t}\n\t\t},\n\t\tnull,\n\t\tcontext.subscriptions\n\t);\n\n\tworkspace.onDidChangeConfiguration(event => {\n\t\tevent.affectsConfiguration('yajer.jestConfigPatterns') && Jest.getConfigs(true);\n\t});\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"sourceRoot":""}